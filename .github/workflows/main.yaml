name: CI/CD Test Suite

on:
  push:
    branches:
      - main  # Change to the branch you want to monitor for PRs, e.g., 'main', 'develop'

jobs:
  trigger-and-poll:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Trigger CI/CD Test Run
      id: trigger
      run: |
        response=$(curl -X POST "https://app.beta.api.autoflow.tools/api/v1/ci-cd/trigger/test-run/${{ secrets.BUCKET_ID }}/execute" \
        -H "CI-CD-Token: ${{ secrets.CI_CD_TOKEN }}" \
        -H "Content-Type: application/json")
        echo "Curl response: $response"
        bucket_run_id=$(echo $response | jq -r '.bucketRunID')
        if [ -z "$bucket_run_id" ]; then
          echo "Failed to trigger test run"
          echo "trigger_failure=true" >> $GITHUB_ENV
        else
          echo "bucket_run_id=$bucket_run_id" >> $GITHUB_ENV

    - name: Poll for CI/CD Test Run Status
      id: poll
      run: |
        if [ "${{ env.trigger_failure }}" == "true" ]; then
          echo "Skipping polling due to trigger failure"
          exit 0
        fi

        bucket_run_id=${{ env.bucket_run_id }}
        status=""
        response=""
        for i in {1..30}; do
          response=$(curl -X GET "https://app.beta.api.autoflow.tools/api/v1/ci-cd/trigger/test-run/$bucket_run_id/status" \
          -H "CI-CD-Token: ${{ secrets.CI_CD_TOKEN }}" \
          -H "Content-Type: application/json")
          echo "Response: $response"
          status=$(echo $response | jq -r '.status')
          if [[ "$status" == "PASSED" || "$status" == "FAILED" ]]; then
            break
          fi
          echo "Status: $status. Retrying in 10 seconds..."
          sleep 10
        done

        if [ "$status" != "PASSED" ]; then
          echo "Test suite run failed or did not complete in time"
          echo "poll_failure=true" >> $GITHUB_ENV
        fi

        echo "response=$response" >> $GITHUB_ENV
        echo $response > response.json

    - name: Send Slack Notification
      if: always()
      run: |
        if [ ! -f response.json ]; then
          echo "{}" > response.json
        fi
        response=$(cat response.json)
        if [ -z "$response" ]; then
          response="{}"
        fi

        bucket_run_id=$(echo $response | jq -r '.bucketRunId')
        status=$(echo $response | jq -r '.status')
        duration=$(echo $response | jq -r '.duration')
        journeys=$(echo $response | jq -r '.journeys // []')

        message="CI/CD Test Suite Status: *${status:-"UNKNOWN"}*\n"
        message+="Total Duration: ${duration:-0}ms\n\n"
        message+="*Journeys:*\n"

        for journey in $(echo "${journeys}" | jq -c '.[]'); do
          journey_id=$(echo $journey | jq -r '.journeyId')
          journey_status=$(echo $journey | jq -r '.status')
          journey_duration=$(echo $journey | jq -r '.duration')
          report_url=$(echo $journey | jq -r '.reportUrl')
          browser=$(echo $journey | jq -r '.browser')
          device=$(echo $journey | jq -r '.device')
          message+="*Status:* ${journey_status}\n"
          message+="*Duration:* ${journey_duration}ms\n"
          message+="*Browser:* ${browser}\n"
          message+="*Device:* ${device}\n"
          message+="*Report:* <${report_url}|View Report>\n\n"
        done

        payload=$(jq -n --arg text "$message" '{"text":$text}')
        
        curl -X POST -H 'Content-type: application/json' --data "$payload" "${{ secrets.SLACK_WEBHOOK_URL }}"

    - name: Final Job Status
      if: always()
      run: |
        if [ "${{ env.trigger_failure }}" == "true" ]; then
          echo "Job failed due to trigger failure"
          exit 1
        elif [ "${{ env.poll_failure }}" == "true" ]; then
          echo "Job failed due to poll failure"
          exit 1
        elif [ "${{ env.status }}" != "PASSED" ]; then
          echo "Job failed because test suite did not pass"
          exit 1
